<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>欢迎来到我的Blog</title>
  
  <subtitle>热爱或者离开</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-10-19T04:59:39.507Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>宾克斯的美酒</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo搭建个人博客笔记</title>
    <link href="http://yoursite.com/2017/10/19/hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2017/10/19/hexo搭建个人博客笔记/</id>
    <published>2017-10-19T03:16:05.000Z</published>
    <updated>2017-10-19T04:59:39.507Z</updated>
    
    <content type="html"><![CDATA[<p>之前一直都很羡慕别人有自己的博客，这几天空闲下来。想搭建一个属于自己的博客。在查阅资料后发现<a href="https://hexo.io/" target="_blank" rel="external">hexo</a> + <a href="github.com">github</a>就可以搭建,在此记录一下搭建博客过程中遇到的一些问题</p><a id="more"></a><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><ul><li>安装Node（必须）<br> 作用：用来生成静态页面的<br> 到Node.js官网下载相应平台的最新版本，一路安装即可。</li><li>安装Git（必须）<br>作用：把本地的hexo内容提交到github上去.</li><li>申请GitHub（必须）</li></ul><blockquote><p>安装的教程我都不多说了，贴几个链接自行安装</p><ol><li><a href="https://nodejs.org/en/" target="_blank" rel="external">node.js下载完傻瓜式安装</a></li><li><a href="https://hexo.io/" target="_blank" rel="external">hexo有中文版教程</a></li><li>github要建立仓库</li></ol></blockquote><h3 id="1-配置hexo关联github"><a href="#1-配置hexo关联github" class="headerlink" title="1 配置hexo关联github"></a>1 配置hexo关联github</h3><p>找到hexo新建项目根目录下的 <code>_config.yml文件</code>  来建立关联,翻到最下面改成这个样子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">     type: git</div><div class="line">     // ！这个是你github项目下的仓库地址  新建仓库名字一定要对应起来！</div><div class="line">     repo: git@github.com:Earlzs/Earlzs.github.io.git   </div><div class="line">     branch: master</div></pre></td></tr></table></figure></p><p>然后执行命令  <code>npm install hexo-deployer-git --save</code><br>这个应该是装了一个hexo的插件 根据 <code>_config.yml</code>文件下刚才我们配置的东西直接方便直接推送至git上面</p><h3 id="2-部署步骤"><a href="#2-部署步骤" class="headerlink" title="2 部署步骤"></a>2 部署步骤</h3><p>我们可以在本地浏览自己的博客  执行<code>hexo server (简写hexo s)</code></p><p>每次部署到github上的步骤，可按以下三步来进行。</p><ol><li>hexo clean (可以省略不写,如果直接执行2，3有问题的话试一下)</li><li>hexo generate(简写 hexo g)</li><li>hexo deploy(简写 hexo d)</li></ol><h3 id="3-主题推荐"><a href="#3-主题推荐" class="headerlink" title="3 主题推荐"></a>3 主题推荐</h3><p>hexo 默认为我们配置了一个主题在 <code>themes目录下可以找到</code><br>当然如果你不喜欢的话  <a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">主题列表</a> 这里有大量的主题供我们下载<br>我的博客使用的是  <a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="external">Yilia</a><br>找到自己喜欢的主题后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</div></pre></td></tr></table></figure></p><p>然后在<code>项目根目录下的themes目录下就可以看到了</code><br>在将根目录下的<code>_config.yml文件</code> 修改  ： <code>theme: yilia</code></p><h3 id="4-添加『RSS订阅』"><a href="#4-添加『RSS订阅』" class="headerlink" title="4 添加『RSS订阅』"></a>4 添加『RSS订阅』</h3><p>安装 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="external">hexo-generator-feed</a> 插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-feed --save</div></pre></td></tr></table></figure></p><p>执行 hexo g  然后在 public目录下就可以看到  <code>atom.xml</code> 文件<br>最后在去你选择的主题目录下找到<code>_config.yml</code>配置如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">subnav:</div><div class="line">  rss: &quot;/atom.xml&quot;</div></pre></td></tr></table></figure></p><h3 id="5-在网站底部加上访问量"><a href="#5-在网站底部加上访问量" class="headerlink" title="5  在网站底部加上访问量"></a>5  在网站底部加上访问量</h3><ol><li><p>打开\themes\yilia\layout\footer.ejs文件,在底部加上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></li><li><p>然后再合适的位置添加显示统计的代码，如图：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;powered-by&quot;&gt;</div><div class="line">&lt;i class=&quot;fa fa-user-md&quot;&gt;&lt;/i&gt;&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</div><div class="line">本站访客数:&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;</div><div class="line">&lt;/span&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></li><li><p>添加之后再执行hexo d -g，然后再刷新页面就能看到效果</p></li></ol><h3 id="6-添加顶部加载条"><a href="#6-添加顶部加载条" class="headerlink" title="6 添加顶部加载条"></a>6 添加顶部加载条</h3><p>打开/themes/next/layout/_partials/head.ejs文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;script src=&quot;//cdn.bootcss.com/pace/1.0.2/pace.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;link href=&quot;//cdn.bootcss.com/pace/1.0.2/themes/pink/pace-theme-flash.css&quot; rel=&quot;stylesheet&quot;&gt;   //pink可以自行改成自己喜欢的颜色</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前一直都很羡慕别人有自己的博客，这几天空闲下来。想搭建一个属于自己的博客。在查阅资料后发现&lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo&lt;/a&gt; + &lt;a href=&quot;github.com&quot;&gt;github&lt;/a&gt;就可以搭建,在此记录一下搭建博客过程中遇到的一些问题&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Css选择器总结</title>
    <link href="http://yoursite.com/2017/10/18/Css%E9%80%89%E6%8B%A9%E5%99%A8%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2017/10/18/Css选择器总结/</id>
    <published>2017-10-18T07:17:06.000Z</published>
    <updated>2017-10-19T03:13:51.918Z</updated>
    
    <content type="html"><![CDATA[<p>在工作中不管是写css还是js我们都需要用到css选择器来定位到需要操作的元素，但使用了这么久才发现，自己用来用去好像一直是用的id,class之类的比较简单的选择器，不过也确实能满足我们的绝大部分需求，今天突然想对所有的选择器进行个知识梳理，以便于在今后的开后的开发过程中，更加灵活应用、得心应手！ （id选择器和class子代,后代,标签，分组,通配符之类的就不废话，相信大家也都知道。这篇文章主要记录一些我们平时用的比较少的选择器，但是在某些场合下不得不用的选择器！）</p><a id="more"></a><h1 id="概念性的东西"><a href="#概念性的东西" class="headerlink" title="概念性的东西"></a>概念性的东西</h1><blockquote><p>要使用css对HTML页面中的元素实现一对一，一对多或者多对一的控制，这就需要用到&gt; CSS选择器。<br>  在 CSS 中，选择器是一种模式，用于选择需要添加样式的元素。</p></blockquote><p><br></p><h3 id="1-紧邻同胞选择符"><a href="#1-紧邻同胞选择符" class="headerlink" title="1 紧邻同胞选择符 +"></a>1 紧邻同胞选择符 +</h3><p>我一般叫它加号选择器    &nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;标签 1 + 标签 2<br>标签 2必须紧跟在其同胞标签 1的后面。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">只有内容为1的p标签会变红</div><div class="line"></div><div class="line">h2 + p &#123;background:red;&#125;</div><div class="line"></div><div class="line">&lt;h2&gt;hello&lt;/h2&gt;</div><div class="line">&lt;p&gt;1&lt;/p&gt;</div><div class="line">&lt;p&gt;2&lt;/p&gt;</div><div class="line">&lt;p&gt;3&lt;/p&gt;</div></pre></td></tr></table></figure></p><p>当我们需要给一列li添加border-right 为1px的边框时候，而最后一个添加border-right显然不太合适这个时候<strong>紧邻同胞选择符</strong>超级好用！</p><h3 id="2-一般同胞选择符"><a href="#2-一般同胞选择符" class="headerlink" title="2 一般同胞选择符 ~"></a>2 一般同胞选择符 ~</h3><p>一般同胞选择符~  标签 2（不一定紧跟）在其同胞标签 1后面。<br>另外一句话说就是标签1的所有同级元素</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">三个p标签都会变红</div><div class="line"></div><div class="line">h2 ~ p &#123;background:red;&#125;</div><div class="line"></div><div class="line">&lt;h2&gt;hello&lt;/h2&gt;</div><div class="line">&lt;p&gt;1&lt;/p&gt;</div><div class="line">&lt;p&gt;2&lt;/p&gt;</div><div class="line">&lt;p&gt;3&lt;/p&gt;</div></pre></td></tr></table></figure><p><br></p><h3 id="3-属性选择器-a-attr"><a href="#3-属性选择器-a-attr" class="headerlink" title="3 属性选择器  a[attr]"></a>3 属性选择器  a[attr]</h3><p>选择所有指定属性的元素<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">选择所有带有 target 属性的 a 元素。那些没有此属性的锚点将不会应用此样式。</div><div class="line"></div><div class="line">a[target]&#123; </div><div class="line">     background:red;</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">当然我们还可以这样 选择所有属性为 target=<span class="string">"_blank"</span> 的 a 元素。只应用于在新标签页打开的链接，其他锚点将不受影响。</div><div class="line"></div><div class="line">a[target=_blank]&#123;</div><div class="line">    background:blue</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">还有这样（css2的属性选择器）  a[attr~=value] （选择属性值包含指定值的元素）  </div><div class="line">这样      a[attr|=value]   （选择属性以指定值开始的元素）</div><div class="line"></div><div class="line">~= 和 *= 都可以选择属性值包含指定值的元素，前者必须是一个独立的单词，</div><div class="line">比如 <span class="built_in">test</span><span class="_">-a</span> 和 <span class="built_in">test</span> a 可以被选中，而 testa 不能被选中。</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">（css3的属性选择器）</div><div class="line">a[href*=<span class="string">"zs"</span>]&#123;</div><div class="line">     background-color:red;</div><div class="line">     font-size:20px;</div><div class="line"> &#125;</div><div class="line">X[attr*=value]  这个选择器匹配元素属性值包含指定值的元素。</div><div class="line">该选择器类似于与上面的选择器，但是比上面的选择器更强大更灵活。</div><div class="line">* 符号可以选择指定属性值包含子字符串的元素，</div><div class="line">也就说，只要属性值中带有指定的值，无需是一个单词，无需空格分开，就可以匹配。  </div><div class="line"></div><div class="line"> </div><div class="line">a[href^=<span class="string">"https"</span>]&#123;</div><div class="line">     background-color:red;</div><div class="line">&#125;</div><div class="line">X[attr^=value]  这个选择器用于匹配元素属性值带有指定的值开始的元素。</div><div class="line"></div><div class="line"></div><div class="line">img[src$=<span class="string">".png"</span>]&#123;</div><div class="line">     border:2px solid red;</div><div class="line">&#125;</div><div class="line">X[attr$=value]  这个选择器匹配元素属性值带有指定的值结尾的元素。</div></pre></td></tr></table></figure><p><br></p><h3 id="4-伪类选择器"><a href="#4-伪类选择器" class="headerlink" title="4 伪类选择器"></a>4 伪类选择器</h3><p>伪类选择器遵循  love hate原则 （哈哈爱恨情仇呀）<br>什么是Love hate呢 ？<br>伪类选择器有 :link   :visited  :hover  :active<br>为一个a标签添加点击链接的各个阶段的状态，只需要按照上面的顺序添加就不会出现奇怪的状态<br>当然伪类选择器还有 :target  :focus</p><h3 id="5-伪元素选择器"><a href="#5-伪元素选择器" class="headerlink" title="5 伪元素选择器"></a>5 伪元素选择器</h3><p>伪元素和伪类虽然都可以用<code>:</code>来表示，但我们最好还是区分开来使用</p><ul><li><code>:</code> 是伪类选择器</li><li><code>::</code> 是伪元素选择器<br>伪元素选择器我们用的最多的就是用来清除浮动了,</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">.clearfix::before&#123;</div><div class="line">    content:<span class="string">'.'</span>;</div><div class="line">    height:0;</div><div class="line">    visibility:hidden;</div><div class="line">    overflow:hidden;</div><div class="line">    display: block;</div><div class="line">    clear:both;</div><div class="line">&#125;</div><div class="line">.clearfix&#123; </div><div class="line">    /*兼容 IE*/</div><div class="line">     zoom: 1;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>伪元素<code>:：before ::after</code>的用法非常多，我在此就不一一列举了</p><h3 id="6-具体子元素选择器？（好吧我也不知道这类该叫什么）"><a href="#6-具体子元素选择器？（好吧我也不知道这类该叫什么）" class="headerlink" title="6 具体子元素选择器？（好吧我也不知道这类该叫什么）"></a>6 具体子元素选择器？（好吧我也不知道这类该叫什么）</h3><p>一直对这类元素选择器的用法迷迷糊糊，使用起来都是尝试~怼样式</p><p>先把这类选择器统一列出来吧</p><ul><li><ol><li>:first-child</li><li>:last-child</li><li>:nth-child(n)</li><li>:nth-last-child(n) </li></ol></li><li><ol><li>:first-of-type </li><li>:last-of-type</li><li>:nth-of-type(n)</li><li>:nth-last-of-type(n)</li></ol></li></ul><p>我把他们分为两类方便记忆，一类是带of-type的一类是不带的<br>挑两个出来举个栗子</p><blockquote><p>:nth-child(n)    </p><p> w3c上的定义为选择器匹配属于其父元素的第 N 个子元素，不论元素的类型。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"> &lt;style&gt;</div><div class="line">        div &#123;</div><div class="line">            margin-top: 60px;</div><div class="line">        &#125;</div><div class="line">        p &#123;</div><div class="line">            background-color: <span class="comment">#ccc;</span></div><div class="line">        &#125;</div><div class="line">        .<span class="built_in">test</span> &gt; :nth-child(3) &#123;</div><div class="line">            background: red;</div><div class="line">        &#125;</div><div class="line">&lt;/style&gt;</div><div class="line"></div><div class="line">&lt;body&gt;</div><div class="line">    &lt;p&gt;1&lt;/p&gt;</div><div class="line">    &lt;p&gt;2&lt;/p&gt;</div><div class="line">    &lt;p&gt;3&lt;/p&gt;</div><div class="line">    &lt;div class=<span class="string">"test"</span>&gt;</div><div class="line">        &lt;p&gt;hello&lt;/p&gt;</div><div class="line">        &lt;h1&gt;我不是P标签&lt;/h1&gt;</div><div class="line">        &lt;p&gt;world&lt;/p&gt;</div><div class="line"></div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;div class=<span class="string">"one"</span>&gt;</div><div class="line">        &lt;p&gt;hello&lt;/p&gt;</div><div class="line">        &lt;p&gt;world&lt;/p&gt;</div><div class="line">        &lt;h1&gt;我不是P标签&lt;/h1&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/body&gt;</div></pre></td></tr></table></figure><p>显示如图所示<br><img src="/2017/10/18/Css选择器总结/1.png" alt="first-chid()"></p><p>所以我们在这里匹配的是属于其test的第 3 个子元素变成了红色！<br><br></p><blockquote><p>:first-of-type   </p><p> w3c上的定义为选择器匹配属于其父元素的特定类型的首个子元素的每个元素。</p></blockquote><p>我们稍微改下代码 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.<span class="built_in">test</span> &gt; :first-of-type &#123;</div><div class="line">            background: red;</div><div class="line">        &#125;</div></pre></td></tr></table></figure><p>可以看到test下的第一个P标签和第一个h1标签的颜色都发生了改变。<br><img src="/2017/10/18/Css选择器总结/2.png" alt="first-of-type"><br>其他的应该都是一样的。我就不一一列举了</p><p><strong>其实我们用到最多的还是隔行变色的这个功能</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">p:nth-child(2n)&#123;</div><div class="line">    background:red</div><div class="line">&#125;</div><div class="line">p:nth-child(2n+1)&#123;</div><div class="line">    bgackground:blue</div><div class="line">&#125;</div><div class="line"></div><div class="line">这里2n和2n+1 可以换成  odd 和even  当然如果填3n的话就是每隔3行执行一次</div></pre></td></tr></table></figure></p><p><br></p><h3 id="7-only-of-type-和-only-child"><a href="#7-only-of-type-和-only-child" class="headerlink" title="7 :only-of-type 和 :only-child"></a>7 :only-of-type 和 :only-child</h3><p>如何区分这两个呢</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&lt;style&gt;</div><div class="line">      .test1 &gt;:only-child&#123;</div><div class="line">        background-color: green;</div><div class="line">        margin-bottom: 50px;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    .test2 &gt;:only-of-type&#123;</div><div class="line">        background-color: red</div><div class="line">    &#125;</div><div class="line">&lt;/style&gt;</div><div class="line">    &lt;div class=<span class="string">"test1"</span>&gt;</div><div class="line">        &lt;p&gt;我是:only-child &lt;/p&gt;</div><div class="line">        &lt;h1&gt;因为加上我所以失效了&lt;/h1&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;div class=<span class="string">"test2"</span>&gt;</div><div class="line">        &lt;p&gt;我是only-of-type&lt;/p&gt;</div><div class="line">        &lt;h1&gt;11111&lt;/h1&gt;</div><div class="line">        &lt;h2&gt;&lt;/h2&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;div class=<span class="string">"test2"</span>&gt;</div><div class="line">            &lt;p&gt;我是only-of-type&lt;/p&gt;</div><div class="line">            &lt;p&gt;因为加上我所以test2中所以得p标签失效&lt;/p&gt;</div><div class="line">            &lt;h1&gt;11111&lt;/h1&gt;</div><div class="line">            &lt;h2&gt;2222&lt;/h2&gt;</div><div class="line">    &lt;/div&gt;</div></pre></td></tr></table></figure><p><img src="/2017/10/18/Css选择器总结/3.png" alt="only-chid"></p><ul><li><code>:only-of-type</code> 父元素下可以有多个元素，但每种类型的标签只能有一个，如果同一类型标签出现了两次，那么本类型标签失效（其实就是没有选中）</li><li><code>:only-child</code> 父元素下可以只能有一个！</li></ul><p><br><br>注意：IE9+ 以及所有浏览器都支持该选择器，IE8 以及更早版本的浏览器不支持这两个属性。</p><p><br></p><h3 id="8-not-selector"><a href="#8-not-selector" class="headerlink" title="8 :not(selector)"></a>8 :not(selector)</h3><p>这个选择器还是很强大的，用于匹配非指定元素/选择器的每个元素，可以理解为取反的意思，即除了指定的元素以外所有元素。</p><p><br><br>注意：IE9+ 以及所有浏览器都支持该选择器，IE8 以及更早版本的浏览器不支持。</p><h3 id="9-selection"><a href="#9-selection" class="headerlink" title="9 ::selection"></a>9 ::selection</h3><p>::selection 选择器匹配元素中被用户选择或处于高亮状态的部分。<br>::selection只可以应用于少数的CSS属性：color、background、cursor 和 outline。<br>下面的代码，当元素被用户选中后会显示为红色的字体：</p><p><br><br>注意：IE9+ 以及所有浏览器都支持该选择器，但是 Firefox 需要通过其私有属性<br>::-moz-selection才能获得支持 。</p><p><br></p><h3 id="10-empty"><a href="#10-empty" class="headerlink" title="10 :empty"></a>10 :empty</h3><p>这个选择器用于匹配没有子元素的每个元素，包括文本节点。<br>选择所有没有任何子级的元素，也就是说选择页面中所有指定的空元素。</p><p><br><br>　注意：IE9+ 以及所以浏览器都支持该选择器，IE8 以及更早版本的浏览器不支持。<br><br></p><h3 id="11-root"><a href="#11-root" class="headerlink" title="11 :root"></a>11 :root</h3><p>:root 匹配文档的根元素，在 HTML 中，根元素始终是 html 元素。<br><br><br>　注意：IE9+ 以及所以浏览器都支持该选择器，IE8 以及更早版本的浏览器不支持。<br><br></p><h3 id="12-enabled-disabled"><a href="#12-enabled-disabled" class="headerlink" title="12 :enabled    :disabled"></a>12 :enabled    :disabled</h3><ul><li>:enabled用于匹配每个启用的元素，主要用于表单元素。 </li><li>:disabled 用于匹配每个禁用的元素，主要用于表单元素。<br>下面的例子，设置所有 type=”text” 的已启用的 input 元素设置背景色：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;style&gt;</div><div class="line">  input[type=&quot;text&quot;]:enabled&#123;</div><div class="line">      background:yellow;</div><div class="line">  &#125;</div><div class="line">&lt;/style&gt;</div><div class="line"></div><div class="line"></div><div class="line">&lt;form action=&quot;&quot;&gt;</div><div class="line">     姓名: &lt;input type=&quot;text&quot; value=&quot;小明&quot; /&gt;&lt;br/&gt;</div><div class="line">     爱好: &lt;input type=&quot;text&quot; value=&quot;捣蛋&quot; /&gt;&lt;br/&gt;</div><div class="line">     籍贯: &lt;input type=&quot;text&quot; disabled value=&quot;汉&quot; /&gt;</div><div class="line">&lt;/form&gt;</div></pre></td></tr></table></figure><p><img src="/2017/10/18/Css选择器总结/4.png" alt="enabled"></p><p><br><br>　注意：IE9+ 以及所以浏览器都支持该选择器，IE8 以及更早版本的浏览器不支持。<br><br></p><h3 id="12-checked"><a href="#12-checked" class="headerlink" title="12 :checked"></a>12 :checked</h3><p>匹配每个选中的输入元素，仅适用于单选按钮或复选框。<br>下面的例子，为所有被选中的 input 元素设置背景色：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;style&gt;</div><div class="line"> input:checked&#123;</div><div class="line">      background:red;</div><div class="line">&#125;</div><div class="line">&lt;/style&gt;</div><div class="line"></div><div class="line"> &lt;form action=&quot;&quot;&gt;</div><div class="line">     &lt;input type=&quot;radio&quot; checked name=&quot;like&quot; value=&quot;love&quot; /&gt;喜欢&lt;br&gt;</div><div class="line">     &lt;input type=&quot;radio&quot; name=&quot;like&quot; value=&quot;noLove&quot; /&gt;不喜欢&lt;br&gt;</div><div class="line">     &lt;input type=&quot;checkbox&quot; checked value=&quot;散步&quot; /&gt;散步&lt;br&gt;</div><div class="line">     &lt;input type=&quot;checkbox&quot; value=&quot;跑步&quot; /&gt;跑步</div><div class="line">&lt;/form&gt;</div></pre></td></tr></table></figure><p><br><br>注意：目前只有 IE9+ 和 Opera 浏览器支持该选择器，Chrome 和 Firefox 不支持。而且在 IE9/IE10/IE11 中显示有差异。<br><br></p><p>在 IE9 和 IE10 中显示如下： <img src="/2017/10/18/Css选择器总结/5.png" alt="ie9和ie10"><br>在 IE11 中取消了对复选框的支持，显示如下： <img src="/2017/10/18/Css选择器总结/6.png" alt="ie11"></p><h3 id="13-readonly"><a href="#13-readonly" class="headerlink" title="13 : readonly"></a>13 : readonly</h3><p>readonly 属性规定输入字段为只读。<br>只读字段是不能修改的。不过，用户仍然可以使用 tab 键切换到该字段，还可以选中或拷贝其文本。<br>readonly 属性可以防止用户对值进行修改，直到满足某些条件为止（比如选中了一个复选框）。然后，需要使用 JavaScript 消除 readonly 值，将输入字段切换到可编辑状态。<br>readonly 属性可与 <code>&lt;input type=&quot;text&quot;&gt;</code> 或 <code>&lt;input type=&quot;password&quot;&gt;</code> 配合使用。</p><h3 id="14-optional-和-required"><a href="#14-optional-和-required" class="headerlink" title="14 :optional 和 :required"></a>14 :optional 和 :required</h3><p>匹配可选的输入元素，在表单元素是可选项时设置指定的样式，即未设置  required 属性的表单素。<br>required 属性是 HTML5 新增加的表单属性，用于规定必需在提交表单之前填写输入字段。<br>表单元素中如果没有特别设置 required 属性即为可选的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"> &lt;style&gt;</div><div class="line"> input:optional&#123;</div><div class="line">     background-color:yellow;</div><div class="line"> &#125;</div><div class="line">input:required&#123;</div><div class="line">     background-color:green;</div><div class="line"> &#125;</div><div class="line"> &lt;/style&gt;</div><div class="line"> &lt;/head&gt;</div><div class="line"> &lt;body&gt;</div><div class="line"> &lt;p&gt;可选的 input 元素：&lt;input type=&quot;text&quot; /&gt;&lt;/p&gt;</div><div class="line"> &lt;p&gt;必填的 input 元素：&lt;input type=&quot;text&quot; required /&gt;&lt;/p&gt;</div><div class="line"> &lt;/body&gt;</div></pre></td></tr></table></figure></p><p><img src="/2017/10/18/Css选择器总结/8.png" alt=":optional和:required"><br><br><br>注意： :optional  :required 选择器只适用于表单元素：input、select 和 textarea。如下：<br>注意： IE10+ 以及所有浏览器都支持该选择器，IE9 以及更早版本的浏览器不支持。<br><br></p><h3 id="15-valid-和-invalid"><a href="#15-valid-和-invalid" class="headerlink" title="15 :valid 和 :invalid"></a>15 :valid 和 :invalid</h3><p>匹配输入值为合法的元素，在表单元素的值需要根据指定条件验证时设置指定样式。<br><strong>注意</strong>： :valid 选择器只作用于能指定区间值的元素，例如 input 元素中的 min 和 max 属性，及正确的 email 字段，合法的数字字段等。如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;style&gt;</div><div class="line">  input:valid&#123;</div><div class="line">      background-color:green;</div><div class="line">  &#125;</div><div class="line">  input:invalid&#123;</div><div class="line">     border:2px solid red;</div><div class="line"> &#125;</div><div class="line">&lt;/style&gt;</div><div class="line"></div><div class="line"></div><div class="line">&lt;body&gt;</div><div class="line"> &lt;p&gt;合法邮箱：&lt;/p&gt;</div><div class="line"> &lt;input type=&quot;email&quot; value=&quot;demo@xx.com&quot; /&gt;</div><div class="line"> &lt;p&gt;非法邮箱：&lt;/p&gt;</div><div class="line"> &lt;input type=&quot;email&quot; value=&quot;demo.com&quot; /&gt;</div><div class="line">&lt;/body&gt;</div></pre></td></tr></table></figure><p><img src="/2017/10/18/Css选择器总结/7.png" alt="valid和invalid"><br><br><br>注意：IE10+ 以及所有浏览器都支持该选择器，IE9 以及更早版本的浏览器不支持。<br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在工作中不管是写css还是js我们都需要用到css选择器来定位到需要操作的元素，但使用了这么久才发现，自己用来用去好像一直是用的id,class之类的比较简单的选择器，不过也确实能满足我们的绝大部分需求，今天突然想对所有的选择器进行个知识梳理，以便于在今后的开后的开发过程中，更加灵活应用、得心应手！ （id选择器和class子代,后代,标签，分组,通配符之类的就不废话，相信大家也都知道。这篇文章主要记录一些我们平时用的比较少的选择器，但是在某些场合下不得不用的选择器！）&lt;/p&gt;
    
    </summary>
    
    
      <category term="css 选择器" scheme="http://yoursite.com/tags/css-%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/10/18/hello-world/"/>
    <id>http://yoursite.com/2017/10/18/hello-world/</id>
    <published>2017-10-18T07:11:32.680Z</published>
    <updated>2017-10-18T07:16:13.160Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
